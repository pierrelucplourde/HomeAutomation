//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Entities", "ComponentComponentHistoricalData", "Component", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeAutomation.WebPortal.Models.Component), "ComponentHistoricalData", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeAutomation.WebPortal.Models.ComponentHistoricalData), true)]
[assembly: EdmRelationshipAttribute("Entities", "DeviceComponent", "Device", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(HomeAutomation.WebPortal.Models.Device), "Component", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HomeAutomation.WebPortal.Models.Component), true)]

#endregion

namespace HomeAutomation.WebPortal.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntitiesContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntitiesContainer object using the connection string found in the 'EntitiesContainer' section of the application configuration file.
        /// </summary>
        public EntitiesContainer() : base("name=EntitiesContainer", "EntitiesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntitiesContainer object.
        /// </summary>
        public EntitiesContainer(string connectionString) : base(connectionString, "EntitiesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntitiesContainer object.
        /// </summary>
        public EntitiesContainer(EntityConnection connection) : base(connection, "EntitiesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
        private ObjectSet<Device> _Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Component> Components
        {
            get
            {
                if ((_Components == null))
                {
                    _Components = base.CreateObjectSet<Component>("Components");
                }
                return _Components;
            }
        }
        private ObjectSet<Component> _Components;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComponentHistoricalData> ComponentHistoricalData
        {
            get
            {
                if ((_ComponentHistoricalData == null))
                {
                    _ComponentHistoricalData = base.CreateObjectSet<ComponentHistoricalData>("ComponentHistoricalData");
                }
                return _ComponentHistoricalData;
            }
        }
        private ObjectSet<ComponentHistoricalData> _ComponentHistoricalData;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevices(Device device)
        {
            base.AddObject("Devices", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Components EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponents(Component component)
        {
            base.AddObject("Components", component);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComponentHistoricalData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponentHistoricalData(ComponentHistoricalData componentHistoricalData)
        {
            base.AddObject("ComponentHistoricalData", componentHistoricalData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="Component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Component : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Component object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static Component CreateComponent(global::System.Int32 id, global::System.Int32 deviceId)
        {
            Component component = new Component();
            component.Id = id;
            component.DeviceId = deviceId;
            return component;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "ComponentComponentHistoricalData", "ComponentHistoricalData")]
        public EntityCollection<ComponentHistoricalData> ComponentHistoricalData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComponentHistoricalData>("Entities.ComponentComponentHistoricalData", "ComponentHistoricalData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComponentHistoricalData>("Entities.ComponentComponentHistoricalData", "ComponentHistoricalData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "DeviceComponent", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("Entities.DeviceComponent", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("Entities.DeviceComponent", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("Entities.DeviceComponent", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("Entities.DeviceComponent", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="ComponentHistoricalData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComponentHistoricalData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComponentHistoricalData object.
        /// </summary>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="componentId">Initial value of the ComponentId property.</param>
        public static ComponentHistoricalData CreateComponentHistoricalData(global::System.DateTime timeStamp, global::System.Int32 componentId)
        {
            ComponentHistoricalData componentHistoricalData = new ComponentHistoricalData();
            componentHistoricalData.TimeStamp = timeStamp;
            componentHistoricalData.ComponentId = componentId;
            return componentHistoricalData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                if (_TimeStamp != value)
                {
                    OnTimeStampChanging(value);
                    ReportPropertyChanging("TimeStamp");
                    _TimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimeStamp");
                    OnTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentId
        {
            get
            {
                return _ComponentId;
            }
            set
            {
                if (_ComponentId != value)
                {
                    OnComponentIdChanging(value);
                    ReportPropertyChanging("ComponentId");
                    _ComponentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ComponentId");
                    OnComponentIdChanged();
                }
            }
        }
        private global::System.Int32 _ComponentId;
        partial void OnComponentIdChanging(global::System.Int32 value);
        partial void OnComponentIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "ComponentComponentHistoricalData", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("Entities.ComponentComponentHistoricalData", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("Entities.ComponentComponentHistoricalData", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("Entities.ComponentComponentHistoricalData", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("Entities.ComponentComponentHistoricalData", "Component", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Device CreateDevice(global::System.Int32 id, global::System.String name)
        {
            Device device = new Device();
            device.Id = id;
            device.Name = name;
            return device;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "DeviceComponent", "Component")]
        public EntityCollection<Component> Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Component>("Entities.DeviceComponent", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Component>("Entities.DeviceComponent", "Component", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.Id = id;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    }

    #endregion

}
